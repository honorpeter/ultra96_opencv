// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _cv_hw_HH_
#define _cv_hw_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cv_hw_dadd_64ns_6bkb.h"
#include "cv_hw_dmul_64ns_6cud.h"
#include "cv_hw_sitodp_32nsdEe.h"
#include "cv_hw_mul_mul_16neOg.h"
#include "cv_hw_CTRL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CTRL_BUS_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CTRL_BUS_DATA_WIDTH = 32>
struct cv_hw : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > in_stream_TDATA;
    sc_in< sc_logic > in_stream_TVALID;
    sc_out< sc_logic > in_stream_TREADY;
    sc_in< sc_lv<4> > in_stream_TKEEP;
    sc_in< sc_lv<4> > in_stream_TSTRB;
    sc_in< sc_lv<1> > in_stream_TUSER;
    sc_in< sc_lv<1> > in_stream_TLAST;
    sc_in< sc_lv<1> > in_stream_TID;
    sc_in< sc_lv<1> > in_stream_TDEST;
    sc_out< sc_lv<32> > op_stream_TDATA;
    sc_out< sc_logic > op_stream_TVALID;
    sc_in< sc_logic > op_stream_TREADY;
    sc_out< sc_lv<4> > op_stream_TKEEP;
    sc_out< sc_lv<4> > op_stream_TSTRB;
    sc_out< sc_lv<1> > op_stream_TUSER;
    sc_out< sc_lv<1> > op_stream_TLAST;
    sc_out< sc_lv<1> > op_stream_TID;
    sc_out< sc_lv<1> > op_stream_TDEST;
    sc_in< sc_logic > s_axi_CTRL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH/8> > s_axi_CTRL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const1;


    // Module declarations
    cv_hw(sc_module_name name);
    SC_HAS_PROCESS(cv_hw);

    ~cv_hw();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    cv_hw_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>* cv_hw_CTRL_BUS_s_axi_U;
    cv_hw_dadd_64ns_6bkb<1,5,64,64,64>* cv_hw_dadd_64ns_6bkb_U1;
    cv_hw_dmul_64ns_6cud<1,5,64,64,64>* cv_hw_dmul_64ns_6cud_U2;
    cv_hw_dmul_64ns_6cud<1,5,64,64,64>* cv_hw_dmul_64ns_6cud_U3;
    cv_hw_sitodp_32nsdEe<1,4,32,64>* cv_hw_sitodp_32nsdEe_U4;
    cv_hw_sitodp_32nsdEe<1,4,32,64>* cv_hw_sitodp_32nsdEe_U5;
    cv_hw_mul_mul_16neOg<1,1,16,16,32>* cv_hw_mul_mul_16neOg_U6;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<23> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > in_stream_V_data_V_0_data_out;
    sc_signal< sc_logic > in_stream_V_data_V_0_vld_in;
    sc_signal< sc_logic > in_stream_V_data_V_0_vld_out;
    sc_signal< sc_logic > in_stream_V_data_V_0_ack_in;
    sc_signal< sc_logic > in_stream_V_data_V_0_ack_out;
    sc_signal< sc_lv<32> > in_stream_V_data_V_0_payload_A;
    sc_signal< sc_lv<32> > in_stream_V_data_V_0_payload_B;
    sc_signal< sc_logic > in_stream_V_data_V_0_sel_rd;
    sc_signal< sc_logic > in_stream_V_data_V_0_sel_wr;
    sc_signal< sc_logic > in_stream_V_data_V_0_sel;
    sc_signal< sc_logic > in_stream_V_data_V_0_load_A;
    sc_signal< sc_logic > in_stream_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > in_stream_V_data_V_0_state;
    sc_signal< sc_logic > in_stream_V_data_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > in_stream_V_keep_V_0_data_out;
    sc_signal< sc_logic > in_stream_V_keep_V_0_vld_in;
    sc_signal< sc_logic > in_stream_V_keep_V_0_vld_out;
    sc_signal< sc_logic > in_stream_V_keep_V_0_ack_in;
    sc_signal< sc_logic > in_stream_V_keep_V_0_ack_out;
    sc_signal< sc_lv<4> > in_stream_V_keep_V_0_payload_A;
    sc_signal< sc_lv<4> > in_stream_V_keep_V_0_payload_B;
    sc_signal< sc_logic > in_stream_V_keep_V_0_sel_rd;
    sc_signal< sc_logic > in_stream_V_keep_V_0_sel_wr;
    sc_signal< sc_logic > in_stream_V_keep_V_0_sel;
    sc_signal< sc_logic > in_stream_V_keep_V_0_load_A;
    sc_signal< sc_logic > in_stream_V_keep_V_0_load_B;
    sc_signal< sc_lv<2> > in_stream_V_keep_V_0_state;
    sc_signal< sc_logic > in_stream_V_keep_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > in_stream_V_strb_V_0_data_out;
    sc_signal< sc_logic > in_stream_V_strb_V_0_vld_in;
    sc_signal< sc_logic > in_stream_V_strb_V_0_vld_out;
    sc_signal< sc_logic > in_stream_V_strb_V_0_ack_in;
    sc_signal< sc_logic > in_stream_V_strb_V_0_ack_out;
    sc_signal< sc_lv<4> > in_stream_V_strb_V_0_payload_A;
    sc_signal< sc_lv<4> > in_stream_V_strb_V_0_payload_B;
    sc_signal< sc_logic > in_stream_V_strb_V_0_sel_rd;
    sc_signal< sc_logic > in_stream_V_strb_V_0_sel_wr;
    sc_signal< sc_logic > in_stream_V_strb_V_0_sel;
    sc_signal< sc_logic > in_stream_V_strb_V_0_load_A;
    sc_signal< sc_logic > in_stream_V_strb_V_0_load_B;
    sc_signal< sc_lv<2> > in_stream_V_strb_V_0_state;
    sc_signal< sc_logic > in_stream_V_strb_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > in_stream_V_user_V_0_data_out;
    sc_signal< sc_logic > in_stream_V_user_V_0_vld_in;
    sc_signal< sc_logic > in_stream_V_user_V_0_vld_out;
    sc_signal< sc_logic > in_stream_V_user_V_0_ack_in;
    sc_signal< sc_logic > in_stream_V_user_V_0_ack_out;
    sc_signal< sc_lv<1> > in_stream_V_user_V_0_payload_A;
    sc_signal< sc_lv<1> > in_stream_V_user_V_0_payload_B;
    sc_signal< sc_logic > in_stream_V_user_V_0_sel_rd;
    sc_signal< sc_logic > in_stream_V_user_V_0_sel_wr;
    sc_signal< sc_logic > in_stream_V_user_V_0_sel;
    sc_signal< sc_logic > in_stream_V_user_V_0_load_A;
    sc_signal< sc_logic > in_stream_V_user_V_0_load_B;
    sc_signal< sc_lv<2> > in_stream_V_user_V_0_state;
    sc_signal< sc_logic > in_stream_V_user_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > in_stream_V_last_V_0_data_out;
    sc_signal< sc_logic > in_stream_V_last_V_0_vld_in;
    sc_signal< sc_logic > in_stream_V_last_V_0_vld_out;
    sc_signal< sc_logic > in_stream_V_last_V_0_ack_in;
    sc_signal< sc_logic > in_stream_V_last_V_0_ack_out;
    sc_signal< sc_lv<1> > in_stream_V_last_V_0_payload_A;
    sc_signal< sc_lv<1> > in_stream_V_last_V_0_payload_B;
    sc_signal< sc_logic > in_stream_V_last_V_0_sel_rd;
    sc_signal< sc_logic > in_stream_V_last_V_0_sel_wr;
    sc_signal< sc_logic > in_stream_V_last_V_0_sel;
    sc_signal< sc_logic > in_stream_V_last_V_0_load_A;
    sc_signal< sc_logic > in_stream_V_last_V_0_load_B;
    sc_signal< sc_lv<2> > in_stream_V_last_V_0_state;
    sc_signal< sc_logic > in_stream_V_last_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > in_stream_V_id_V_0_data_out;
    sc_signal< sc_logic > in_stream_V_id_V_0_vld_in;
    sc_signal< sc_logic > in_stream_V_id_V_0_vld_out;
    sc_signal< sc_logic > in_stream_V_id_V_0_ack_in;
    sc_signal< sc_logic > in_stream_V_id_V_0_ack_out;
    sc_signal< sc_lv<1> > in_stream_V_id_V_0_payload_A;
    sc_signal< sc_lv<1> > in_stream_V_id_V_0_payload_B;
    sc_signal< sc_logic > in_stream_V_id_V_0_sel_rd;
    sc_signal< sc_logic > in_stream_V_id_V_0_sel_wr;
    sc_signal< sc_logic > in_stream_V_id_V_0_sel;
    sc_signal< sc_logic > in_stream_V_id_V_0_load_A;
    sc_signal< sc_logic > in_stream_V_id_V_0_load_B;
    sc_signal< sc_lv<2> > in_stream_V_id_V_0_state;
    sc_signal< sc_logic > in_stream_V_id_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > in_stream_V_dest_V_0_data_out;
    sc_signal< sc_logic > in_stream_V_dest_V_0_vld_in;
    sc_signal< sc_logic > in_stream_V_dest_V_0_vld_out;
    sc_signal< sc_logic > in_stream_V_dest_V_0_ack_in;
    sc_signal< sc_logic > in_stream_V_dest_V_0_ack_out;
    sc_signal< sc_lv<1> > in_stream_V_dest_V_0_payload_A;
    sc_signal< sc_lv<1> > in_stream_V_dest_V_0_payload_B;
    sc_signal< sc_logic > in_stream_V_dest_V_0_sel_rd;
    sc_signal< sc_logic > in_stream_V_dest_V_0_sel_wr;
    sc_signal< sc_logic > in_stream_V_dest_V_0_sel;
    sc_signal< sc_logic > in_stream_V_dest_V_0_load_A;
    sc_signal< sc_logic > in_stream_V_dest_V_0_load_B;
    sc_signal< sc_lv<2> > in_stream_V_dest_V_0_state;
    sc_signal< sc_logic > in_stream_V_dest_V_0_state_cmp_full;
    sc_signal< sc_lv<32> > op_stream_V_data_V_1_data_out;
    sc_signal< sc_logic > op_stream_V_data_V_1_vld_in;
    sc_signal< sc_logic > op_stream_V_data_V_1_vld_out;
    sc_signal< sc_logic > op_stream_V_data_V_1_ack_in;
    sc_signal< sc_logic > op_stream_V_data_V_1_ack_out;
    sc_signal< sc_lv<32> > op_stream_V_data_V_1_payload_A;
    sc_signal< sc_lv<32> > op_stream_V_data_V_1_payload_B;
    sc_signal< sc_logic > op_stream_V_data_V_1_sel_rd;
    sc_signal< sc_logic > op_stream_V_data_V_1_sel_wr;
    sc_signal< sc_logic > op_stream_V_data_V_1_sel;
    sc_signal< sc_logic > op_stream_V_data_V_1_load_A;
    sc_signal< sc_logic > op_stream_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > op_stream_V_data_V_1_state;
    sc_signal< sc_logic > op_stream_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > op_stream_V_keep_V_1_data_out;
    sc_signal< sc_logic > op_stream_V_keep_V_1_vld_in;
    sc_signal< sc_logic > op_stream_V_keep_V_1_vld_out;
    sc_signal< sc_logic > op_stream_V_keep_V_1_ack_in;
    sc_signal< sc_logic > op_stream_V_keep_V_1_ack_out;
    sc_signal< sc_lv<4> > op_stream_V_keep_V_1_payload_A;
    sc_signal< sc_lv<4> > op_stream_V_keep_V_1_payload_B;
    sc_signal< sc_logic > op_stream_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > op_stream_V_keep_V_1_sel_wr;
    sc_signal< sc_logic > op_stream_V_keep_V_1_sel;
    sc_signal< sc_logic > op_stream_V_keep_V_1_load_A;
    sc_signal< sc_logic > op_stream_V_keep_V_1_load_B;
    sc_signal< sc_lv<2> > op_stream_V_keep_V_1_state;
    sc_signal< sc_logic > op_stream_V_keep_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > op_stream_V_strb_V_1_data_out;
    sc_signal< sc_logic > op_stream_V_strb_V_1_vld_in;
    sc_signal< sc_logic > op_stream_V_strb_V_1_vld_out;
    sc_signal< sc_logic > op_stream_V_strb_V_1_ack_in;
    sc_signal< sc_logic > op_stream_V_strb_V_1_ack_out;
    sc_signal< sc_lv<4> > op_stream_V_strb_V_1_payload_A;
    sc_signal< sc_lv<4> > op_stream_V_strb_V_1_payload_B;
    sc_signal< sc_logic > op_stream_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > op_stream_V_strb_V_1_sel_wr;
    sc_signal< sc_logic > op_stream_V_strb_V_1_sel;
    sc_signal< sc_logic > op_stream_V_strb_V_1_load_A;
    sc_signal< sc_logic > op_stream_V_strb_V_1_load_B;
    sc_signal< sc_lv<2> > op_stream_V_strb_V_1_state;
    sc_signal< sc_logic > op_stream_V_strb_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > op_stream_V_user_V_1_data_out;
    sc_signal< sc_logic > op_stream_V_user_V_1_vld_in;
    sc_signal< sc_logic > op_stream_V_user_V_1_vld_out;
    sc_signal< sc_logic > op_stream_V_user_V_1_ack_in;
    sc_signal< sc_logic > op_stream_V_user_V_1_ack_out;
    sc_signal< sc_lv<1> > op_stream_V_user_V_1_payload_A;
    sc_signal< sc_lv<1> > op_stream_V_user_V_1_payload_B;
    sc_signal< sc_logic > op_stream_V_user_V_1_sel_rd;
    sc_signal< sc_logic > op_stream_V_user_V_1_sel_wr;
    sc_signal< sc_logic > op_stream_V_user_V_1_sel;
    sc_signal< sc_logic > op_stream_V_user_V_1_load_A;
    sc_signal< sc_logic > op_stream_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > op_stream_V_user_V_1_state;
    sc_signal< sc_logic > op_stream_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > op_stream_V_last_V_1_data_out;
    sc_signal< sc_logic > op_stream_V_last_V_1_vld_in;
    sc_signal< sc_logic > op_stream_V_last_V_1_vld_out;
    sc_signal< sc_logic > op_stream_V_last_V_1_ack_in;
    sc_signal< sc_logic > op_stream_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > op_stream_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > op_stream_V_last_V_1_payload_B;
    sc_signal< sc_logic > op_stream_V_last_V_1_sel_rd;
    sc_signal< sc_logic > op_stream_V_last_V_1_sel_wr;
    sc_signal< sc_logic > op_stream_V_last_V_1_sel;
    sc_signal< sc_logic > op_stream_V_last_V_1_load_A;
    sc_signal< sc_logic > op_stream_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > op_stream_V_last_V_1_state;
    sc_signal< sc_logic > op_stream_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > op_stream_V_id_V_1_data_out;
    sc_signal< sc_logic > op_stream_V_id_V_1_vld_in;
    sc_signal< sc_logic > op_stream_V_id_V_1_vld_out;
    sc_signal< sc_logic > op_stream_V_id_V_1_ack_in;
    sc_signal< sc_logic > op_stream_V_id_V_1_ack_out;
    sc_signal< sc_lv<1> > op_stream_V_id_V_1_payload_A;
    sc_signal< sc_lv<1> > op_stream_V_id_V_1_payload_B;
    sc_signal< sc_logic > op_stream_V_id_V_1_sel_rd;
    sc_signal< sc_logic > op_stream_V_id_V_1_sel_wr;
    sc_signal< sc_logic > op_stream_V_id_V_1_sel;
    sc_signal< sc_logic > op_stream_V_id_V_1_load_A;
    sc_signal< sc_logic > op_stream_V_id_V_1_load_B;
    sc_signal< sc_lv<2> > op_stream_V_id_V_1_state;
    sc_signal< sc_logic > op_stream_V_id_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > op_stream_V_dest_V_1_data_out;
    sc_signal< sc_logic > op_stream_V_dest_V_1_vld_in;
    sc_signal< sc_logic > op_stream_V_dest_V_1_vld_out;
    sc_signal< sc_logic > op_stream_V_dest_V_1_ack_in;
    sc_signal< sc_logic > op_stream_V_dest_V_1_ack_out;
    sc_signal< sc_lv<1> > op_stream_V_dest_V_1_payload_A;
    sc_signal< sc_lv<1> > op_stream_V_dest_V_1_payload_B;
    sc_signal< sc_logic > op_stream_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > op_stream_V_dest_V_1_sel_wr;
    sc_signal< sc_logic > op_stream_V_dest_V_1_sel;
    sc_signal< sc_logic > op_stream_V_dest_V_1_load_A;
    sc_signal< sc_logic > op_stream_V_dest_V_1_load_B;
    sc_signal< sc_lv<2> > op_stream_V_dest_V_1_state;
    sc_signal< sc_logic > op_stream_V_dest_V_1_state_cmp_full;
    sc_signal< sc_lv<16> > rows;
    sc_signal< sc_lv<16> > cols;
    sc_signal< sc_lv<8> > flag;
    sc_signal< sc_logic > in_stream_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > op_stream_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<1> > tmp_2_reg_415;
    sc_signal< sc_lv<64> > grp_fu_186_p1;
    sc_signal< sc_lv<64> > reg_192;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<64> > grp_fu_175_p2;
    sc_signal< sc_lv<64> > reg_197;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<1> > tmp_2_fu_211_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_217_p2;
    sc_signal< sc_lv<1> > tmp_8_reg_419;
    sc_signal< sc_lv<4> > tmp_keep_V_reg_423;
    sc_signal< sc_lv<4> > tmp_strb_V_reg_428;
    sc_signal< sc_lv<1> > tmp_user_V_reg_433;
    sc_signal< sc_lv<1> > tmp_last_V_reg_438;
    sc_signal< sc_lv<1> > tmp_id_V_reg_443;
    sc_signal< sc_lv<1> > tmp_dest_V_reg_448;
    sc_signal< sc_lv<32> > tmp_5_fu_254_p1;
    sc_signal< sc_lv<8> > tmp_13_reg_463;
    sc_signal< sc_lv<64> > grp_fu_189_p1;
    sc_signal< sc_lv<64> > tmp_10_reg_468;
    sc_signal< sc_lv<32> > tmp_14_fu_284_p1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > grp_fu_180_p2;
    sc_signal< sc_lv<64> > tmp_11_reg_478;
    sc_signal< sc_lv<64> > grp_fu_171_p2;
    sc_signal< sc_lv<64> > tmp_12_reg_483;
    sc_signal< sc_lv<11> > loc_V_reg_488;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<52> > loc_V_1_fu_302_p1;
    sc_signal< sc_lv<52> > loc_V_1_reg_494;
    sc_signal< sc_lv<32> > p_Val2_4_fu_399_p3;
    sc_signal< bool > ap_block_state23;
    sc_signal< bool > ap_block_state23_io;
    sc_signal< sc_lv<64> > grp_fu_171_p0;
    sc_signal< sc_lv<64> > grp_fu_171_p1;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<64> > grp_fu_175_p1;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > grp_fu_186_p0;
    sc_signal< sc_lv<32> > grp_fu_189_p0;
    sc_signal< sc_lv<32> > tmp_3_fu_408_p2;
    sc_signal< sc_lv<8> > tmp_fu_250_p1;
    sc_signal< sc_lv<8> > tmp_9_fu_259_p4;
    sc_signal< sc_lv<64> > p_Val2_s_fu_288_p1;
    sc_signal< sc_lv<54> > tmp_1_i_i_i_fu_306_p4;
    sc_signal< sc_lv<12> > tmp_i_i_i_i_cast1_fu_319_p1;
    sc_signal< sc_lv<12> > sh_assign_fu_322_p2;
    sc_signal< sc_lv<11> > tmp_3_i_i_i_fu_336_p2;
    sc_signal< sc_lv<1> > isNeg_fu_328_p3;
    sc_signal< sc_lv<12> > tmp_3_i_i_i_cast_fu_341_p1;
    sc_signal< sc_lv<12> > sh_assign_1_fu_345_p3;
    sc_signal< sc_lv<32> > sh_assign_1_cast_fu_353_p1;
    sc_signal< sc_lv<54> > tmp_5_i_i_i_cast_fu_361_p1;
    sc_signal< sc_lv<137> > tmp_1_i_i_i_cast_fu_315_p1;
    sc_signal< sc_lv<137> > tmp_5_i_i_i_fu_357_p1;
    sc_signal< sc_lv<54> > tmp_6_i_i_i_fu_365_p2;
    sc_signal< sc_lv<1> > tmp_21_fu_377_p3;
    sc_signal< sc_lv<137> > tmp_8_i_i_i_fu_371_p2;
    sc_signal< sc_lv<32> > tmp_17_fu_385_p1;
    sc_signal< sc_lv<32> > tmp_18_fu_389_p4;
    sc_signal< sc_lv<16> > tmp_3_fu_408_p0;
    sc_signal< sc_lv<16> > tmp_3_fu_408_p1;
    sc_signal< sc_logic > grp_fu_186_ce;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > grp_fu_189_ce;
    sc_signal< sc_lv<23> > ap_NS_fsm;
    sc_signal< sc_lv<32> > tmp_3_fu_408_p00;
    sc_signal< sc_lv<32> > tmp_3_fu_408_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<23> ap_ST_fsm_state1;
    static const sc_lv<23> ap_ST_fsm_state2;
    static const sc_lv<23> ap_ST_fsm_state3;
    static const sc_lv<23> ap_ST_fsm_state4;
    static const sc_lv<23> ap_ST_fsm_state5;
    static const sc_lv<23> ap_ST_fsm_state6;
    static const sc_lv<23> ap_ST_fsm_state7;
    static const sc_lv<23> ap_ST_fsm_state8;
    static const sc_lv<23> ap_ST_fsm_state9;
    static const sc_lv<23> ap_ST_fsm_state10;
    static const sc_lv<23> ap_ST_fsm_state11;
    static const sc_lv<23> ap_ST_fsm_state12;
    static const sc_lv<23> ap_ST_fsm_state13;
    static const sc_lv<23> ap_ST_fsm_state14;
    static const sc_lv<23> ap_ST_fsm_state15;
    static const sc_lv<23> ap_ST_fsm_state16;
    static const sc_lv<23> ap_ST_fsm_state17;
    static const sc_lv<23> ap_ST_fsm_state18;
    static const sc_lv<23> ap_ST_fsm_state19;
    static const sc_lv<23> ap_ST_fsm_state20;
    static const sc_lv<23> ap_ST_fsm_state21;
    static const sc_lv<23> ap_ST_fsm_state22;
    static const sc_lv<23> ap_ST_fsm_state23;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_16;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<64> ap_const_lv64_3FD3333333333333;
    static const sc_lv<64> ap_const_lv64_3FBC28F5C28F5C29;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<64> ap_const_lv64_3FE2E147AE147AE1;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<12> ap_const_lv12_C01;
    static const sc_lv<11> ap_const_lv11_3FF;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<32> ap_const_lv32_54;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_9;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state23();
    void thread_ap_block_state23_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_grp_fu_171_p0();
    void thread_grp_fu_171_p1();
    void thread_grp_fu_175_p1();
    void thread_grp_fu_186_ce();
    void thread_grp_fu_186_p0();
    void thread_grp_fu_189_ce();
    void thread_grp_fu_189_p0();
    void thread_in_stream_TDATA_blk_n();
    void thread_in_stream_TREADY();
    void thread_in_stream_V_data_V_0_ack_in();
    void thread_in_stream_V_data_V_0_ack_out();
    void thread_in_stream_V_data_V_0_data_out();
    void thread_in_stream_V_data_V_0_load_A();
    void thread_in_stream_V_data_V_0_load_B();
    void thread_in_stream_V_data_V_0_sel();
    void thread_in_stream_V_data_V_0_state_cmp_full();
    void thread_in_stream_V_data_V_0_vld_in();
    void thread_in_stream_V_data_V_0_vld_out();
    void thread_in_stream_V_dest_V_0_ack_in();
    void thread_in_stream_V_dest_V_0_ack_out();
    void thread_in_stream_V_dest_V_0_data_out();
    void thread_in_stream_V_dest_V_0_load_A();
    void thread_in_stream_V_dest_V_0_load_B();
    void thread_in_stream_V_dest_V_0_sel();
    void thread_in_stream_V_dest_V_0_state_cmp_full();
    void thread_in_stream_V_dest_V_0_vld_in();
    void thread_in_stream_V_dest_V_0_vld_out();
    void thread_in_stream_V_id_V_0_ack_in();
    void thread_in_stream_V_id_V_0_ack_out();
    void thread_in_stream_V_id_V_0_data_out();
    void thread_in_stream_V_id_V_0_load_A();
    void thread_in_stream_V_id_V_0_load_B();
    void thread_in_stream_V_id_V_0_sel();
    void thread_in_stream_V_id_V_0_state_cmp_full();
    void thread_in_stream_V_id_V_0_vld_in();
    void thread_in_stream_V_id_V_0_vld_out();
    void thread_in_stream_V_keep_V_0_ack_in();
    void thread_in_stream_V_keep_V_0_ack_out();
    void thread_in_stream_V_keep_V_0_data_out();
    void thread_in_stream_V_keep_V_0_load_A();
    void thread_in_stream_V_keep_V_0_load_B();
    void thread_in_stream_V_keep_V_0_sel();
    void thread_in_stream_V_keep_V_0_state_cmp_full();
    void thread_in_stream_V_keep_V_0_vld_in();
    void thread_in_stream_V_keep_V_0_vld_out();
    void thread_in_stream_V_last_V_0_ack_in();
    void thread_in_stream_V_last_V_0_ack_out();
    void thread_in_stream_V_last_V_0_data_out();
    void thread_in_stream_V_last_V_0_load_A();
    void thread_in_stream_V_last_V_0_load_B();
    void thread_in_stream_V_last_V_0_sel();
    void thread_in_stream_V_last_V_0_state_cmp_full();
    void thread_in_stream_V_last_V_0_vld_in();
    void thread_in_stream_V_last_V_0_vld_out();
    void thread_in_stream_V_strb_V_0_ack_in();
    void thread_in_stream_V_strb_V_0_ack_out();
    void thread_in_stream_V_strb_V_0_data_out();
    void thread_in_stream_V_strb_V_0_load_A();
    void thread_in_stream_V_strb_V_0_load_B();
    void thread_in_stream_V_strb_V_0_sel();
    void thread_in_stream_V_strb_V_0_state_cmp_full();
    void thread_in_stream_V_strb_V_0_vld_in();
    void thread_in_stream_V_strb_V_0_vld_out();
    void thread_in_stream_V_user_V_0_ack_in();
    void thread_in_stream_V_user_V_0_ack_out();
    void thread_in_stream_V_user_V_0_data_out();
    void thread_in_stream_V_user_V_0_load_A();
    void thread_in_stream_V_user_V_0_load_B();
    void thread_in_stream_V_user_V_0_sel();
    void thread_in_stream_V_user_V_0_state_cmp_full();
    void thread_in_stream_V_user_V_0_vld_in();
    void thread_in_stream_V_user_V_0_vld_out();
    void thread_isNeg_fu_328_p3();
    void thread_loc_V_1_fu_302_p1();
    void thread_op_stream_TDATA();
    void thread_op_stream_TDATA_blk_n();
    void thread_op_stream_TDEST();
    void thread_op_stream_TID();
    void thread_op_stream_TKEEP();
    void thread_op_stream_TLAST();
    void thread_op_stream_TSTRB();
    void thread_op_stream_TUSER();
    void thread_op_stream_TVALID();
    void thread_op_stream_V_data_V_1_ack_in();
    void thread_op_stream_V_data_V_1_ack_out();
    void thread_op_stream_V_data_V_1_data_out();
    void thread_op_stream_V_data_V_1_load_A();
    void thread_op_stream_V_data_V_1_load_B();
    void thread_op_stream_V_data_V_1_sel();
    void thread_op_stream_V_data_V_1_state_cmp_full();
    void thread_op_stream_V_data_V_1_vld_in();
    void thread_op_stream_V_data_V_1_vld_out();
    void thread_op_stream_V_dest_V_1_ack_in();
    void thread_op_stream_V_dest_V_1_ack_out();
    void thread_op_stream_V_dest_V_1_data_out();
    void thread_op_stream_V_dest_V_1_load_A();
    void thread_op_stream_V_dest_V_1_load_B();
    void thread_op_stream_V_dest_V_1_sel();
    void thread_op_stream_V_dest_V_1_state_cmp_full();
    void thread_op_stream_V_dest_V_1_vld_in();
    void thread_op_stream_V_dest_V_1_vld_out();
    void thread_op_stream_V_id_V_1_ack_in();
    void thread_op_stream_V_id_V_1_ack_out();
    void thread_op_stream_V_id_V_1_data_out();
    void thread_op_stream_V_id_V_1_load_A();
    void thread_op_stream_V_id_V_1_load_B();
    void thread_op_stream_V_id_V_1_sel();
    void thread_op_stream_V_id_V_1_state_cmp_full();
    void thread_op_stream_V_id_V_1_vld_in();
    void thread_op_stream_V_id_V_1_vld_out();
    void thread_op_stream_V_keep_V_1_ack_in();
    void thread_op_stream_V_keep_V_1_ack_out();
    void thread_op_stream_V_keep_V_1_data_out();
    void thread_op_stream_V_keep_V_1_load_A();
    void thread_op_stream_V_keep_V_1_load_B();
    void thread_op_stream_V_keep_V_1_sel();
    void thread_op_stream_V_keep_V_1_state_cmp_full();
    void thread_op_stream_V_keep_V_1_vld_in();
    void thread_op_stream_V_keep_V_1_vld_out();
    void thread_op_stream_V_last_V_1_ack_in();
    void thread_op_stream_V_last_V_1_ack_out();
    void thread_op_stream_V_last_V_1_data_out();
    void thread_op_stream_V_last_V_1_load_A();
    void thread_op_stream_V_last_V_1_load_B();
    void thread_op_stream_V_last_V_1_sel();
    void thread_op_stream_V_last_V_1_state_cmp_full();
    void thread_op_stream_V_last_V_1_vld_in();
    void thread_op_stream_V_last_V_1_vld_out();
    void thread_op_stream_V_strb_V_1_ack_in();
    void thread_op_stream_V_strb_V_1_ack_out();
    void thread_op_stream_V_strb_V_1_data_out();
    void thread_op_stream_V_strb_V_1_load_A();
    void thread_op_stream_V_strb_V_1_load_B();
    void thread_op_stream_V_strb_V_1_sel();
    void thread_op_stream_V_strb_V_1_state_cmp_full();
    void thread_op_stream_V_strb_V_1_vld_in();
    void thread_op_stream_V_strb_V_1_vld_out();
    void thread_op_stream_V_user_V_1_ack_in();
    void thread_op_stream_V_user_V_1_ack_out();
    void thread_op_stream_V_user_V_1_data_out();
    void thread_op_stream_V_user_V_1_load_A();
    void thread_op_stream_V_user_V_1_load_B();
    void thread_op_stream_V_user_V_1_sel();
    void thread_op_stream_V_user_V_1_state_cmp_full();
    void thread_op_stream_V_user_V_1_vld_in();
    void thread_op_stream_V_user_V_1_vld_out();
    void thread_p_Val2_4_fu_399_p3();
    void thread_p_Val2_s_fu_288_p1();
    void thread_sh_assign_1_cast_fu_353_p1();
    void thread_sh_assign_1_fu_345_p3();
    void thread_sh_assign_fu_322_p2();
    void thread_tmp_14_fu_284_p1();
    void thread_tmp_17_fu_385_p1();
    void thread_tmp_18_fu_389_p4();
    void thread_tmp_1_i_i_i_cast_fu_315_p1();
    void thread_tmp_1_i_i_i_fu_306_p4();
    void thread_tmp_21_fu_377_p3();
    void thread_tmp_2_fu_211_p2();
    void thread_tmp_3_fu_408_p0();
    void thread_tmp_3_fu_408_p00();
    void thread_tmp_3_fu_408_p1();
    void thread_tmp_3_fu_408_p10();
    void thread_tmp_3_i_i_i_cast_fu_341_p1();
    void thread_tmp_3_i_i_i_fu_336_p2();
    void thread_tmp_5_fu_254_p1();
    void thread_tmp_5_i_i_i_cast_fu_361_p1();
    void thread_tmp_5_i_i_i_fu_357_p1();
    void thread_tmp_6_i_i_i_fu_365_p2();
    void thread_tmp_8_fu_217_p2();
    void thread_tmp_8_i_i_i_fu_371_p2();
    void thread_tmp_9_fu_259_p4();
    void thread_tmp_fu_250_p1();
    void thread_tmp_i_i_i_i_cast1_fu_319_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
